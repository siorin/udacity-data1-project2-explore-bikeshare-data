Overview
In this project, you will make use of Python to explore data related to bike share systems for three major cities in the United Statesâ€”Chicago, New York City, and Washington. You will write code to import the data and answer interesting questions about it by computing descriptive statistics. You will also write a script that takes in raw input to create an interactive experience in the terminal to present these statistics.

What Software Do I Need?
To complete this project, the following software requirements apply:
	You should have Python 3, NumPy, and pandas installed using Anaconda
	A text editor, like Sublime or Atom.
	A terminal application (Terminal on Mac and Linux or Cygwin on Windows).


compare the system usage between three large cities: Chicago, New York City, and Washington, DC

Randomly selected data for the first six months of 2017 are provided for all three cities. All three of the data files contain the same core six (6) columns
	Start Time (e.g., 2017-01-01 00:07:57)
	End Time (e.g., 2017-01-01 00:20:53)
	Trip Duration (in seconds - e.g., 776)
	Start Station (e.g., Broadway & Barry Ave)
	End Station (e.g., Sedgwick St & North Ave)
	User Type (Subscriber or Customer)

The Chicago and New York City files also have the following two columns:
	Gender
	Birth Year


write code to provide the following information

#1 Popular times of travel (i.e., occurs most often in the start time)
	most common month
	most common day of week
	most common hour of day

#2 Popular stations and trip
	most common start station
	most common end station
	most common trip from start to end (i.e., most frequent combination of start station and end station)

#3 Trip duration
	total travel time
	average travel time

#4 User info
	counts of each user type
	counts of each gender (only available for NYC and Chicago)
	earliest, most recent, most common year of birth (only available for NYC and Chicago)


a template with helper code and comments is provided in a bikeshare.py
three city dataset files:
	chicago.csv
	new_york_city.csv
	washington.csv

interactive experience:
	Would you like to see data for Chicago, New York, or Washington?
	Would you like to filter the data by month, day, or not at all?
	(If they chose month) Which month - January, February, March, April, May, or June?
	(If they chose day) Which day - Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, or Sunday?

The answers to the questions above will determine the city and timeframe on which you'll do data analysis. After filtering the dataset, users will see the statistical result of the data, and choose to start again or exit.

Any time you ask users for input, there is a chance they may not enter what you expect, so your code should handle unexpected input well without failing. You need to anticipate raw input errors like typos, or users misunderstanding what you are expecting. 


Some useful pandas methods:
df.head(), df.columns, df.describe(), df.info()
df['column_name'].value_counts(), df['column_name'].unique()










Rubric

Code Quality
CRITERIA - MEETS SPECIFICATIONS

Functionality of code - All code cells can be run without error.

Choice of data types and structures - Appropriate data types (e.g. strings, floats) and data structures (e.g. lists, dictionaries) are chosen to carry out the required analysis tasks.

Use of loops and conditional statements - Loops and conditional statements are used to process the data correctly.

Use of packages - Packages are used to carry out advanced tasks.

Use of functions - Functions are used to reduce repetitive code.

Use of good coding practices - Docstrings, comments, and variable names enable readability of the code.


Script and Questions
CRITERIA - MEETS SPECIFICATIONS

Solicit and handle raw user input - Raw input is solicited and handled correctly to guide the interactive question-answering experience; no errors are thrown when unexpected input is entered.

Use descriptive statistics to answer questions about the data - Descriptive statistics are correctly computed and used to answer the questions posed about the data. Raw data is displayed upon request by the user.

Suggestions to Make Your Project Stand Out!

Change the structure of bikeshare.py to make the code more efficient or in better style.
Ask and answer additional questions about the data beyond the questions already provided.
Make the interactive experience wow-worthy! Add images, make it into a web app, etc. Make it your own!



All you need to submit for this project is two files:

bikeshare.py: Your code
readme.txt: If you refer to other websites, books, and other resources to help you in solving tasks in the project, make sure that you document them in this file







